/*
FiftyTen Service Contracts

Common API contracts for FiftyTen microservices

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package contracts

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WorkerRegistration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkerRegistration{}

// WorkerRegistration struct for WorkerRegistration
type WorkerRegistration struct {
	Id        string         `json:"id"`
	Exchanges []ExchangeType `json:"exchanges"`
	Capacity  int32          `json:"capacity"`
	ApiUrl    string         `json:"apiUrl"`
}

type _WorkerRegistration WorkerRegistration

// NewWorkerRegistration instantiates a new WorkerRegistration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkerRegistration(id string, exchanges []ExchangeType, capacity int32, apiUrl string) *WorkerRegistration {
	this := WorkerRegistration{}
	this.Id = id
	this.Exchanges = exchanges
	this.Capacity = capacity
	this.ApiUrl = apiUrl
	return &this
}

// NewWorkerRegistrationWithDefaults instantiates a new WorkerRegistration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkerRegistrationWithDefaults() *WorkerRegistration {
	this := WorkerRegistration{}
	return &this
}

// GetId returns the Id field value
func (o *WorkerRegistration) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkerRegistration) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkerRegistration) SetId(v string) {
	o.Id = v
}

// GetExchanges returns the Exchanges field value
func (o *WorkerRegistration) GetExchanges() []ExchangeType {
	if o == nil {
		var ret []ExchangeType
		return ret
	}

	return o.Exchanges
}

// GetExchangesOk returns a tuple with the Exchanges field value
// and a boolean to check if the value has been set.
func (o *WorkerRegistration) GetExchangesOk() ([]ExchangeType, bool) {
	if o == nil {
		return nil, false
	}
	return o.Exchanges, true
}

// SetExchanges sets field value
func (o *WorkerRegistration) SetExchanges(v []ExchangeType) {
	o.Exchanges = v
}

// GetCapacity returns the Capacity field value
func (o *WorkerRegistration) GetCapacity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Capacity
}

// GetCapacityOk returns a tuple with the Capacity field value
// and a boolean to check if the value has been set.
func (o *WorkerRegistration) GetCapacityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Capacity, true
}

// SetCapacity sets field value
func (o *WorkerRegistration) SetCapacity(v int32) {
	o.Capacity = v
}

// GetApiUrl returns the ApiUrl field value
func (o *WorkerRegistration) GetApiUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value
// and a boolean to check if the value has been set.
func (o *WorkerRegistration) GetApiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiUrl, true
}

// SetApiUrl sets field value
func (o *WorkerRegistration) SetApiUrl(v string) {
	o.ApiUrl = v
}

func (o WorkerRegistration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkerRegistration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["exchanges"] = o.Exchanges
	toSerialize["capacity"] = o.Capacity
	toSerialize["apiUrl"] = o.ApiUrl
	return toSerialize, nil
}

func (o *WorkerRegistration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"exchanges",
		"capacity",
		"apiUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkerRegistration := _WorkerRegistration{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkerRegistration)

	if err != nil {
		return err
	}

	*o = WorkerRegistration(varWorkerRegistration)

	return err
}

type NullableWorkerRegistration struct {
	value *WorkerRegistration
	isSet bool
}

func (v NullableWorkerRegistration) Get() *WorkerRegistration {
	return v.value
}

func (v *NullableWorkerRegistration) Set(val *WorkerRegistration) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkerRegistration) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkerRegistration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkerRegistration(val *WorkerRegistration) *NullableWorkerRegistration {
	return &NullableWorkerRegistration{value: val, isSet: true}
}

func (v NullableWorkerRegistration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkerRegistration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
