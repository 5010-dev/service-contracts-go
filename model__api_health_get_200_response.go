/*
FiftyTen Service Contracts

Common API contracts for FiftyTen microservices

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package contracts

import (
	"encoding/json"
	"time"
)

// checks if the ApiHealthGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiHealthGet200Response{}

// ApiHealthGet200Response struct for ApiHealthGet200Response
type ApiHealthGet200Response struct {
	Status *string    `json:"status,omitempty"`
	Role   *string    `json:"role,omitempty"`
	Time   *time.Time `json:"time,omitempty"`
}

// NewApiHealthGet200Response instantiates a new ApiHealthGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiHealthGet200Response() *ApiHealthGet200Response {
	this := ApiHealthGet200Response{}
	return &this
}

// NewApiHealthGet200ResponseWithDefaults instantiates a new ApiHealthGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiHealthGet200ResponseWithDefaults() *ApiHealthGet200Response {
	this := ApiHealthGet200Response{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiHealthGet200Response) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHealthGet200Response) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiHealthGet200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiHealthGet200Response) SetStatus(v string) {
	o.Status = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *ApiHealthGet200Response) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHealthGet200Response) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *ApiHealthGet200Response) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *ApiHealthGet200Response) SetRole(v string) {
	o.Role = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ApiHealthGet200Response) GetTime() time.Time {
	if o == nil || IsNil(o.Time) {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiHealthGet200Response) GetTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ApiHealthGet200Response) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *ApiHealthGet200Response) SetTime(v time.Time) {
	o.Time = &v
}

func (o ApiHealthGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiHealthGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableApiHealthGet200Response struct {
	value *ApiHealthGet200Response
	isSet bool
}

func (v NullableApiHealthGet200Response) Get() *ApiHealthGet200Response {
	return v.value
}

func (v *NullableApiHealthGet200Response) Set(val *ApiHealthGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApiHealthGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApiHealthGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiHealthGet200Response(val *ApiHealthGet200Response) *NullableApiHealthGet200Response {
	return &NullableApiHealthGet200Response{value: val, isSet: true}
}

func (v NullableApiHealthGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiHealthGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
